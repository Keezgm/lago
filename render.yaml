services:

  - name: lago-db
    type: web
    runtime: docker
    image: 
      url: postgres:14.0-alpine
    envVars:  
      - key: POSTGRES_DB
        value: ${POSTGRES_DB:-lago}
      - key: POSTGRES_USER
        value: ${POSTGRES_USER:-lago}
      - key: POSTGRES_PASSWORD
        value: ${POSTGRES_PASSWORD:-changeme}
      - key: PGDATA
        value: /data/postgres
      - key: PGPORT  
        value: ${POSTGRES_PORT:-5432}

  - name: lago-redis
    type: web
    runtime: docker
    image:
      url: redis:6.2-alpine
    envVars:
      - key: REDIS_PORT
        value: ${REDIS_PORT:-6379}

  - name: lago-api
    type: web
    runtime: docker
    image:
      url: getlago/api:v0.50.0-beta
    envVars:  
      - key: LAGO_API_URL
        value: ${LAGO_API_URL:-http://localhost:3000}
      - key: DATABASE_URL
        value: postgresql://${POSTGRES_USER:-lago}:${POSTGRES_PASSWORD:-changeme}@${POSTGRES_HOST:-db}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-lago}
      - key: REDIS_URL
        value: redis://${REDIS_HOST:-redis}:${REDIS_PORT:-6379}
      - key: REDIS_PASSWORD
        value: ${REDIS_PASSWORD}
      - key: SECRET_KEY_BASE
        value: ${SECRET_KEY_BASE:-your-secret-key-base-hex-64}
      - key: RAILS_ENV
        value: production
      - key: RAILS_LOG_TO_STDOUT
        value: ${LAGO_RAILS_STDOUT:-true}  
      - key: SENTRY_DSN
        value: ${SENTRY_DSN}
      - key: LAGO_FRONT_URL
        value: ${LAGO_FRONT_URL:-http://localhost}
      - key: RSA_PRIVATE_KEY
        value: ${LAGO_RSA_PRIVATE_KEY} # Should be base64 encoded
      - key: LAGO_RSA_PRIVATE_KEY
        value: ${LAGO_RSA_PRIVATE_KEY} # Should be base64 encoded  
      - key: LAGO_SIDEKIQ_WEB
        value: ${LAGO_SIDEKIQ_WEB}
      - key: ENCRYPTION_PRIMARY_KEY
        value: ${LAGO_ENCRYPTION_PRIMARY_KEY:-your-encrpytion-primary-key}
      - key: ENCRYPTION_DETERMINISTIC_KEY
        value: ${LAGO_ENCRYPTION_DETERMINISTIC_KEY:-your-encrpytion-deterministic-key}
      - key: ENCRYPTION_KEY_DERIVATION_SALT
        value: ${LAGO_ENCRYPTION_KEY_DERIVATION_SALT:-your-encrpytion-derivation-salt}
      - key: LAGO_USE_AWS_S3
        value: ${LAGO_USE_AWS_S3:-false}
      - key: LAGO_AWS_S3_ACCESS_KEY_ID
        value: ${LAGO_AWS_S3_ACCESS_KEY_ID:-azerty123456}
      - key: LAGO_AWS_S3_SECRET_ACCESS_KEY
        value: ${LAGO_AWS_S3_SECRET_ACCESS_KEY:-azerty123456}
      - key: LAGO_AWS_S3_REGION  
        value: ${LAGO_AWS_S3_REGION:-us-east-1}
      - key: LAGO_AWS_S3_BUCKET
        value: ${LAGO_AWS_S3_BUCKET:-bucket}
      - key: LAGO_AWS_S3_ENDPOINT
        value: ${LAGO_AWS_S3_ENDPOINT}
      - key: LAGO_USE_GCS
        value: ${LAGO_USE_GCS:-false}
      - key: LAGO_GCS_PROJECT
        value: ${LAGO_GCS_PROJECT:-}
      - key: LAGO_GCS_BUCKET
        value: ${LAGO_GCS_BUCKET:-}
      - key: LAGO_PDF_URL
        value: ${LAGO_PDF_URL:-http://pdf:3000}
      - key: LAGO_REDIS_CACHE_URL
        value: redis://${LAGO_REDIS_CACHE_HOST:-redis}:${LAGO_REDIS_CACHE_PORT:-6379} 
      - key: LAGO_REDIS_CACHE_PASSWORD
        value: ${LAGO_REDIS_CACHE_PASSWORD}
      - key: LAGO_DISABLE_SEGMENT
        value: ${LAGO_DISABLE_SEGMENT}
      - key: LAGO_OAUTH_PROXY_URL
        value: https://proxy.getlago.com
      - key: LAGO_LICENSE
        value: ${LAGO_LICENSE:-}

  - name: lago-front
    type: web 
    runtime: docker
    image:
      url: getlago/front:v0.50.0-beta
    envVars:
      - key: API_URL
        value: ${LAGO_API_URL:-http://localhost:3000}
      - key: APP_ENV
        value: ${APP_ENV:-production}
      - key: CODEGEN_API
        value: ${LAGO_API_URL:-http://localhost:3000}
      - key: LAGO_DISABLE_SIGNUP
        value: ${LAGO_DISABLE_SIGNUP:-false}  
      - key: LAGO_OAUTH_PROXY_URL
        value: https://proxy.getlago.com
      - key: SENTRY_DSN
        value: ${SENTRY_DSN_FRONT}

  - name: lago-worker 
    type: worker
    runtime: docker  
    image:
      url: getlago/api:v0.50.0-beta
    envVars:
      - key: LAGO_API_URL
        value: ${LAGO_API_URL:-http://localhost:3000}
      - key: DATABASE_URL
        value: postgresql://${POSTGRES_USER:-lago}:${POSTGRES_PASSWORD:-changeme}@${POSTGRES_HOST:-db}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-lago}
      - key: REDIS_URL
        value: redis://${REDIS_HOST:-redis}:${REDIS_PORT:-6379}
      - key: REDIS_PASSWORD
        value: ${REDIS_PASSWORD}  
      - key: SECRET_KEY_BASE
        value: ${SECRET_KEY_BASE:-your-secret-key-base-hex-64}
      - key: RAILS_ENV
        value: production
      - key: RAILS_LOG_TO_STDOUT
        value: ${LAGO_RAILS_STDOUT:-true}
      - key: SENTRY_DSN
        value: ${SENTRY_DSN}
      - key: LAGO_RSA_PRIVATE_KEY
        value: ${LAGO_RSA_PRIVATE_KEY} # Should be base64 encoded
      - key: RSA_PRIVATE_KEY
        value: ${LAGO_RSA_PRIVATE_KEY} # Should be base64 encoded
      - key: ENCRYPTION_PRIMARY_KEY
        value: ${LAGO_ENCRYPTION_PRIMARY_KEY:-your-encrpytion-primary-key}
      - key: ENCRYPTION_DETERMINISTIC_KEY
        value: ${LAGO_ENCRYPTION_DETERMINISTIC_KEY:-your-encrpytion-deterministic-key}
      - key: ENCRYPTION_KEY_DERIVATION_SALT
        value: ${LAGO_ENCRYPTION_KEY_DERIVATION_SALT:-your-encrpytion-derivation-salt}
      - key: LAGO_FRONT_URL 
        value: ${LAGO_FRONT_URL:-http://localhost}
      - key: LAGO_USE_AWS_S3
        value: ${LAGO_USE_AWS_S3:-false}
      - key: LAGO_AWS_S3_ACCESS_KEY_ID
        value: ${LAGO_AWS_S3_ACCESS_KEY_ID:-azerty123456}
      - key: LAGO_AWS_S3_SECRET_ACCESS_KEY
        value: ${LAGO_AWS_S3_SECRET_ACCESS_KEY:-azerty123456}
      - key: LAGO_AWS_S3_REGION
        value: ${LAGO_AWS_S3_REGION:-us-east-1}
      - key: LAGO_AWS_S3_BUCKET
        value: ${LAGO_AWS_S3_BUCKET:-bucket}
      - key: LAGO_AWS_S3_ENDPOINT
        value: ${LAGO_AWS_S3_ENDPOINT}
      - key: LAGO_USE_GCS 
        value: ${LAGO_USE_GCS:-false}
      - key: LAGO_GCS_PROJECT
        value: ${LAGO_GCS_PROJECT:-}
      - key: LAGO_GCS_BUCKET
        value: ${LAGO_GCS_BUCKET:-}
      - key: LAGO_PDF_URL
        value: ${LAGO_PDF_URL:-http://pdf:3000}
      - key: LAGO_REDIS_CACHE_URL
        value: redis://${LAGO_REDIS_CACHE_HOST:-redis}:${LAGO_REDIS_CACHE_PORT:-6379}
      - key: LAGO_REDIS_CACHE_PASSWORD
        value: ${LAGO_REDIS_CACHE_PASSWORD}
      - key: LAGO_DISABLE_SEGMENT
        value: ${LAGO_DISABLE_SEGMENT}

  - name: lago-clock
    type: cron 
    runtime: docker
    image:
      url: getlago/api:v0.50.0-beta
    envVars:
      - key: LAGO_API_URL
        value: ${LAGO_API_URL:-http://localhost:3000}
      - key: DATABASE_URL
        value: postgresql://${POSTGRES_USER:-lago}:${POSTGRES_PASSWORD:-changeme}@${POSTGRES_HOST:-db}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-lago}
      - key: REDIS_URL
        value: redis://${REDIS_HOST:-redis}:${REDIS_PORT:-6379}
      - key: REDIS_PASSWORD
        value: ${REDIS_PASSWORD}
      - key: SECRET_KEY_BASE
        value: ${SECRET_KEY_BASE:-your-secret-key-base-hex-64} 
      - key: RAILS_ENV
        value: production
      - key: RAILS_LOG_TO_STDOUT
        value: ${LAGO_RAILS_STDOUT:-true}
      - key: SENTRY_DSN 
        value: ${SENTRY_DSN}
      - key: LAGO_RSA_PRIVATE_KEY
        value: ${LAGO_RSA_PRIVATE_KEY} # Should be base64 encoded
      - key: RSA_PRIVATE_KEY
        value: ${LAGO_RSA_PRIVATE_KEY} # Should be base64 encoded
      - key: ENCRYPTION_PRIMARY_KEY
        value: ${LAGO_ENCRYPTION_PRIMARY_KEY:-your-encrpytion-primary-key}
      - key: ENCRYPTION_DETERMINISTIC_KEY
        value: ${LAGO_ENCRYPTION_DETERMINISTIC_KEY:-your-encrpytion-deterministic-key}
      - key: ENCRYPTION_KEY_DERIVATION_SALT
        value: ${LAGO_ENCRYPTION_KEY_DERIVATION_SALT:-your-encrpytion-derivation-salt}

  - name: lago-pdf  
    type: web
    runtime: docker
    image:
      url: getlago/lago-gotenberg:7
